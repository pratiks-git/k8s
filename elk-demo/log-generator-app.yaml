apiVersion: apps/v1
kind: Deployment
metadata:
  name: space-explorer
  namespace: demo-app
  labels:
    app: space-explorer
spec:
  replicas: 2
  selector:
    matchLabels:
      app: space-explorer
  template:
    metadata:
      labels:
        app: space-explorer
    spec:
      containers:
      - name: space-explorer
        image: nginx:latest
        ports:
        - containerPort: 80
        volumeMounts:
        - name: nginx-config
          mountPath: /etc/nginx/conf.d
        - name: log-generator
          mountPath: /log-generator
      - name: log-generator
        image: busybox
        command: ["/bin/sh", "-c"]
        args:
        - >
          while true; do
            echo "[INFO] User exploring galaxy sector 64. Coordinates: 791-20" >> /logs/app.log;
            echo "[DEBUG] Ship systems: Warp Drive: 42% operational" >> /logs/app.log;
            if [ 14 -eq 0 ]; then
              echo "[WARNING] Asteroid field detected! Shields at 35%" >> /logs/app.log;
            fi
            if [ 8 -eq 0 ]; then
              echo "[ERROR] Critical system failure in sector 1! Emergency protocols engaged." >> /logs/app.log;
            fi
            sleep 0.5;
          done
        volumeMounts:
        - name: log-volume
          mountPath: /logs
      - name: log-exporter
        image: busybox
        command: ["/bin/sh", "-c"]
        args:
        - >
          tail -f /logs/app.log
        volumeMounts:
        - name: log-volume
          mountPath: /logs
      volumes:
      - name: nginx-config
        configMap:
          name: nginx-config
      - name: log-volume
        emptyDir: {}
      - name: log-generator
        emptyDir: {}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
  namespace: demo-app
data:
  default.conf: |
    server {
      listen 80;
      root /log-generator;
      
      location / {
        add_header Content-Type text/html;
        return 200 '<html><head><title>Space Explorer Mission Control</title><style>body{font-family:Arial,sans-serif;background:#000;color:#0f0;margin:0;padding:20px;} h1{color:#0f6;} .console{background:#001;border:1px solid #0f0;padding:10px;height:400px;overflow:auto;font-family:monospace;} .blink{animation:blink 1s infinite;} @keyframes blink{0%{opacity:1;}50%{opacity:0;}100%{opacity:1;}}</style></head><body><h1>Space Explorer Mission Control</h1><div class="console"><pre id="log">Initializing mission control systems...</pre></div><script>const log=document.getElementById("log");function fetchLogs(){fetch("/logs").then(r=>r.text()).then(t=>{log.innerHTML=t;}).catch(e=>{console.error(e);}).finally(()=>{setTimeout(fetchLogs,1000);});}fetchLogs();</script></body></html>';
      }
      
      location /logs {
        add_header Content-Type text/plain;
        return 200 ;
      }
      
      location /metrics {
        return 200 'space_explorer_warp_drive{status="operational"} 1\nspace_explorer_shields{strength="high"} 95\nspace_explorer_life_support{status="nominal"} 100\nspace_explorer_asteroids_detected 5\nspace_explorer_alien_encounters 2\n';
      }
    }
---
apiVersion: v1
kind: Service
metadata:
  name: space-explorer
  namespace: demo-app
spec:
  selector:
    app: space-explorer
  ports:
  - port: 80
    targetPort: 80
  type: LoadBalancer
